{"id":"2489879391","type":"IssuesEvent","actor":{"id":75626,"login":"chilicuil","gravatar_id":"","url":"https://api.github.com/users/chilicuil","avatar_url":"https://avatars.githubusercontent.com/u/75626?"},"repo":{"id":3287,"name":"scrooloose/nerdcommenter","url":"https://api.github.com/repos/scrooloose/nerdcommenter"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/scrooloose/nerdcommenter/issues/176","labels_url":"https://api.github.com/repos/scrooloose/nerdcommenter/issues/176/labels{/name}","comments_url":"https://api.github.com/repos/scrooloose/nerdcommenter/issues/176/comments","events_url":"https://api.github.com/repos/scrooloose/nerdcommenter/issues/176/events","html_url":"https://github.com/scrooloose/nerdcommenter/issues/176","id":53231056,"number":176,"title":"Support lazy loading for nerdcommenter","user":{"login":"chilicuil","id":75626,"avatar_url":"https://avatars.githubusercontent.com/u/75626?v=3","gravatar_id":"","url":"https://api.github.com/users/chilicuil","html_url":"https://github.com/chilicuil","followers_url":"https://api.github.com/users/chilicuil/followers","following_url":"https://api.github.com/users/chilicuil/following{/other_user}","gists_url":"https://api.github.com/users/chilicuil/gists{/gist_id}","starred_url":"https://api.github.com/users/chilicuil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chilicuil/subscriptions","organizations_url":"https://api.github.com/users/chilicuil/orgs","repos_url":"https://api.github.com/users/chilicuil/repos","events_url":"https://api.github.com/users/chilicuil/events{/privacy}","received_events_url":"https://api.github.com/users/chilicuil/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"milestone":null,"comments":0,"created_at":"2015-01-01T23:00:00Z","updated_at":"2015-01-01T23:00:00Z","closed_at":null,"body":"Some recent vim plugin managers allow lazy loading with a syntax similar to this:\r\n\r\n    Bundle 'scrooloose/nerdcommenter', {'on': '<Plug>NERDCommenterToggle' }\r\n    map <leader>c<space> <Plug>NERDCommenterToggle\r\n\r\nUnfortunately due to the way nerdcommenter starts it's not possible to load it lazily, when doing so it fails with something like this:\r\n\r\n```\r\nError detected while processing function NERDComment..<SNR>43_IsInSexyComment..<SNR>43_FindBoundingLinesOfSexyCom..<SNR>43_Multipart.\r\n.<SNR>43_Right:\r\nline    3:\r\nE121: Undefined variable: b:NERDCommenterDelims\r\nE15: Invalid expression: has_key(params, 'alt') ? b:NERDCommenterDelims['rightAlt'] : b:NERDCommenterDelims['right'] \r\nline    5:\r\nE121: Undefined variable: delim\r\nE15: Invalid expression: delim == ''\r\nError detected while processing function NERDComment..<SNR>43_IsInSexyComment..<SNR>43_FindBoundingLinesOfSexyCom..<SNR>43_Multipart.\r\n.<SNR>43_Right:\r\nline    3:\r\nE121: Undefined variable: b:NERDCommenterDelims\r\nE15: Invalid expression: has_key(params, 'alt') ? b:NERDCommenterDelims['rightAlt'] : b:NERDCommenterDelims['right'] \r\nline    5:\r\nE121: Undefined variable: delim\r\nE15: Invalid expression: delim == ''\r\n```\r\n\r\nThat's because there hasn't been enough time to call `SetUpForNewFiletype`, which is called after autocommands.\r\n\r\n```\r\naugroup NERDCommenter\r\n\r\n    \"if the user enters a buffer or reads a buffer then we gotta set up\r\n    \"the comment delimiters for that new filetype\r\n    autocmd BufEnter,BufRead * :call s:SetUpForNewFiletype(&filetype, 0)\r\n\r\n    \"if the filetype of a buffer changes, force the script to reset the\r\n    \"delims for the buffer\r\n    autocmd Filetype * :call s:SetUpForNewFiletype(&filetype, 1)\r\naugroup END\r\n```\r\n\r\nA temporal workaround it to call `SetUpForNewFiletype` manually just at the end of NERD_commenter.vim\r\n\r\n```\r\ninoremap <silent> <plug>NERDCommenterInsert <SPACE><BS><ESC>:call NERDComment('i', \"insert\")<CR>\r\ncall s:SetUpForNewFiletype(&filetype, 1)\r\n```\r\n\r\nAnyway probably there is a better a way, so I left it here for your consideration.\r\n\r\nThanks for the great plugin!"}},"public":true,"created_at":"2015-01-01T23:00:00Z"}